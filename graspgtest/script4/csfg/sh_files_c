#!/bin/sh

set -x

#  1.  Generate CSF expansions
#      1.1 MR for 3l3l'

rcsfggenerate_csfg <<EOF1
1
2s(2,i)2p(6,i)3s(2,*)
2s(2,i)2p(6,i)3s(1,*)3d(1,*)
2s(2,i)2p(6,i)3p(2,*)
2s(2,i)2p(6,i)3d(2,*)

3s,3p,3d
0,8
0
y
2s(2,i)2p(6,i)3s(1,*)3p(1,*)
2s(2,i)2p(6,i)3p(1,*)3d(1,*)

3s,3p,3d
0,8
0
n
EOF1

mv rcsfg.out n3.g
cp rlabel.out rlabel.inp
mv rlabel.out n3.l

#        1.2 SD-MR for n=9

rcsfggenerate_csfg <<EOF3
1
2s(2,i)2p(6,i)3s(2,*)
2s(2,i)2p(6,i)3s(1,*)3d(1,*)
2s(2,i)2p(6,i)3p(2,*)
2s(2,i)2p(6,i)3d(2,*)

3s,3p,3d
0,8
0
y
2s(2,i)2p(6,i)3s(1,*)3p(1,*)
2s(2,i)2p(6,i)3p(1,*)3d(1,*)

3s,3p,3d
0,8
0
y
2s(2,i)2p(6,5)3s(2,*)
2s(2,i)2p(6,5)3s(1,*)3d(1,*)
2s(2,i)2p(6,5)3p(2,*)
2s(2,i)2p(6,5)3d(2,*)
2s(2,1)2p(6,i)3s(2,*)
2s(2,1)2p(6,i)3s(1,*)3d(1,*)
2s(2,1)2p(6,i)3p(2,*)
2s(2,1)2p(6,i)3d(2,*)

9s,9p,9d,9f,9g,9h,9i
0,8
2
y
2s(2,i)2p(6,5)3s(1,*)3p(1,*)
2s(2,i)2p(6,5)3p(1,*)3d(1,*)
2s(2,1)2p(6,i)3s(1,*)3p(1,*)
2s(2,1)2p(6,i)3p(1,*)3d(1,*)

9s,9p,9d,9f,9g,9h,9i
0,8
2
n
EOF3

mv rcsfg.out n.g

# Split into  n4.g, n5.g, n6.g, n7.g, n8.g, n9.g
# Also obtain n4.l, n5.l, n6.l, n7.l, n8.l, n9.l

rcsfgsplit_csfg <<EOF5
n
6
4s,4p,4d,4f
4
5s,5p,5d,5f,5g
5
6s,6p,6d,6f,6g,6h
6
7s,7p,7d,7f,7g,7h,7i
7
8s,8p,8d,8f,8g,8h,8i
8
9s,9p,9d,9f,9g,9h,9i
9
EOF5

rm clist.ref excitationdata n.g rlabel.out rlabel.inp > /dev/null 2>&1
